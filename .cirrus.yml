linux_task:
  container:
    image: alpine:latest
  env:
    GOPROXY: https://proxy.golang.org
    MODULEPATH: /tmp/go/src/github.com/${CIRRUS_REPO_FULL_NAME}
  install_script:
    - apk add go
    - apk add git
    - mkdir -p /tmp/go/src/github.com/${CIRRUS_REPO_OWNER}
    - cd /tmp/go/src/github.com/${CIRRUS_REPO_OWNER}
    - echo $(pwd)
    - ls
  clone_script: |
    if [[ -z "$CIRRUS_PR" ]]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git ${MODULEPATH}
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git ${MODULEPATH}
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi
    export CIRRUS_WORKING_DIR=${MODULEPATH}
    export GOPATH=/tmp/go
    export PATH=${GOPATH}/bin:${PATH}
  build_script:
    - go version
    - cd ${MODULEPATH}
    - pwd
    - ls -lah
    - go build -race -v ./...
  test_script:
    - go test -race -count=100 ./...
    - go test -race -v -count=1 ./...
